{"ast":null,"code":"var _jsxFileName = \"/home/naheem/super-quiz-app/src/components/QuizQuestions.tsx\",\n  _s = $RefreshSig$();\n// Question.tsx\nimport React, { useState, useEffect } from 'react';\nimport '../Quiz.css'; // Question.tsx\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Question = ({\n  questionData,\n  onAnswer,\n  onNextQuestion\n}) => {\n  _s();\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [timer, setTimer] = useState(questionData.time);\n  const [optionStatus, setOptionStatus] = useState(new Array(questionData.options.length).fill(false));\n  useEffect(() => {\n    setSelectedOption(null); // Reset selectedOption when a new question is received\n    setTimer(questionData.time); // Reset the timer when a new question is received\n    setOptionStatus(new Array(questionData.options.length).fill(false)); // Reset optionStatus\n  }, [questionData]);\n  useEffect(() => {\n    if (timer > 0) {\n      const interval = setInterval(() => {\n        setTimer(timer - 1);\n      }, 1000);\n      return () => clearInterval(interval);\n    } else {\n      handleAnswer(false); // Automatically submit an incorrect answer when the timer ends\n    }\n  }, [timer]);\n  const handleAnswer = isCorrect => {\n    if (selectedOption !== null) {\n      if (isCorrect) {\n        setOptionStatus(prevStatus => prevStatus.map((status, index) => index === selectedOption ? true : status));\n      } else {\n        setOptionStatus(prevStatus => prevStatus.map((status, index) => index === selectedOption ? false : status));\n        setOptionStatus(prevStatus => prevStatus.map((status, index) => index === questionData.answer ? true : status));\n      }\n      onAnswer(isCorrect);\n    }\n    onNextQuestion();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Question\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ImageContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: questionData.imageUrl,\n        alt: \"Question\",\n        className: \"Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: questionData.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Options\",\n      children: questionData.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `Option ${selectedOption === index ? optionStatus[index] ? 'Correct' : 'Incorrect' : ''}`,\n        onClick: () => setSelectedOption(index),\n        disabled: timer <= 0,\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Time Remaining: \", timer, \" seconds\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(Question, \"/r+Wrhag6HY681TAf+XTOIpitI8=\");\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Question","questionData","onAnswer","onNextQuestion","_s","selectedOption","setSelectedOption","timer","setTimer","time","optionStatus","setOptionStatus","Array","options","length","fill","interval","setInterval","clearInterval","handleAnswer","isCorrect","prevStatus","map","status","index","answer","className","children","src","imageUrl","alt","fileName","_jsxFileName","lineNumber","columnNumber","question","option","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/naheem/super-quiz-app/src/components/QuizQuestions.tsx"],"sourcesContent":["// Question.tsx\nimport React, { useState, useEffect } from 'react';\nimport '../Quiz.css'// Question.tsx\n\n\ninterface QuestionProps {\n  questionData: {\n    imageUrl: string;\n    question: string;\n    options: string[];\n    answer: number;\n    time: number;\n  };\n  onAnswer: (isCorrect: boolean) => void;\n  onNextQuestion: () => void;\n}\n\nconst Question: React.FC<QuestionProps> = ({\n  questionData,\n  onAnswer,\n  onNextQuestion,\n}) => {\n  const [selectedOption, setSelectedOption] = useState<number | null>(null);\n  const [timer, setTimer] = useState<number>(questionData.time);\n  const [optionStatus, setOptionStatus] = useState<boolean[]>(\n    new Array(questionData.options.length).fill(false)\n  );\n\n  useEffect(() => {\n    setSelectedOption(null); // Reset selectedOption when a new question is received\n    setTimer(questionData.time); // Reset the timer when a new question is received\n    setOptionStatus(new Array(questionData.options.length).fill(false)); // Reset optionStatus\n  }, [questionData]);\n\n  useEffect(() => {\n    if (timer > 0) {\n      const interval = setInterval(() => {\n        setTimer(timer - 1);\n      }, 1000);\n\n      return () => clearInterval(interval);\n    } else {\n      handleAnswer(false); // Automatically submit an incorrect answer when the timer ends\n    }\n  }, [timer]);\n\n  const handleAnswer = (isCorrect: boolean) => {\n    if (selectedOption !== null) {\n      if (isCorrect) {\n        setOptionStatus((prevStatus) =>\n          prevStatus.map((status, index) =>\n            index === selectedOption ? true : status\n          )\n        );\n      } else {\n        setOptionStatus((prevStatus) =>\n          prevStatus.map((status, index) =>\n            index === selectedOption ? false : status\n          )\n        );\n        setOptionStatus((prevStatus) =>\n          prevStatus.map((status, index) =>\n            index === questionData.answer ? true : status\n          )\n        );\n      }\n      onAnswer(isCorrect);\n    }\n    onNextQuestion();\n  };\n\n  return (\n    <div className=\"Question\">\n      <div className=\"ImageContainer\">\n        <img src={questionData.imageUrl} alt=\"Question\" className=\"Image\" />\n      </div>\n      <h2>{questionData.question}</h2>\n      <div className=\"Options\">\n        {questionData.options.map((option, index) => (\n          <button\n            key={index}\n            className={`Option ${\n              selectedOption === index\n                ? optionStatus[index]\n                  ? 'Correct'\n                  : 'Incorrect'\n                : ''\n            }`}\n            onClick={() => setSelectedOption(index)}\n            disabled={timer <= 0}\n          >\n            {option}\n          </button>\n        ))}\n      </div>\n      <p>Time Remaining: {timer} seconds</p>\n    </div>\n  );\n};\n\nexport default Question;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}