{"ast":null,"code":"var _jsxFileName = \"/home/naheem/super-quiz-app/src/components/Quiz.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Question from './QuizQuestions';\nimport '../Quiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [questions, setQuestions] = useState([]);\n\n  // get the data from api\n  useEffect(() => {\n    async function fetchQuestions() {\n      try {\n        const response = await axios.get('https://scs-interview-api.herokuapp.com/questions');\n        setQuestions(response.data);\n      } catch (error) {\n        console.error('Error fetching questions:', error);\n      }\n    }\n    fetchQuestions();\n  }, []);\n\n  // increase \n  const handleAnswer = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n    if (currentQuestionIndex + 1 < questions.length) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setShowResult(true);\n    }\n  };\n  const onNextQuestion = () => {\n    if (currentQuestionIndex + 1 < questions.length) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setShowResult(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Quiz\",\n    children: showResult ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Super Quiz Completed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You answered \", score, \" out of \", questions.length, \" questions correctly.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : questions.length > 0 && currentQuestionIndex < questions.length ? /*#__PURE__*/_jsxDEV(Question, {\n      questionData: questions[currentQuestionIndex],\n      onAnswer: handleAnswer,\n      onNextQuestion: onNextQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"xiIjpPVrYO/AQNrDZ2NqcFLy7Wo=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useEffect","useState","axios","Question","jsxDEV","_jsxDEV","Quiz","_s","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","showResult","setShowResult","questions","setQuestions","fetchQuestions","response","get","data","error","console","handleAnswer","isCorrect","length","onNextQuestion","className","children","fileName","_jsxFileName","lineNumber","columnNumber","questionData","onAnswer","_c","$RefreshReg$"],"sources":["/home/naheem/super-quiz-app/src/components/Quiz.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Question from './QuizQuestions';\nimport '../Quiz.css';\n\nconst Quiz: React.FC = () => {\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [questions, setQuestions] = useState([]);\n\n  // get the data from api\n  useEffect(() => {\n    async function fetchQuestions() {\n      try {\n        const response = await axios.get(\n          'https://scs-interview-api.herokuapp.com/questions'\n        );\n        setQuestions(response.data);\n      } catch (error) {\n        console.error('Error fetching questions:', error);\n      }\n    }\n\n    fetchQuestions();\n  }, []);\n\n  // increase \n  const handleAnswer = (isCorrect: boolean) => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    if (currentQuestionIndex + 1 < questions.length) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setShowResult(true);\n    }\n  };\n\n  const onNextQuestion = () => {\n    if (currentQuestionIndex + 1 < questions.length) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setShowResult(true);\n    }\n  };\n\n  return (\n    <div className=\"Quiz\">\n      {showResult ? (\n        <div>\n          <h2>Super Quiz Completed!</h2>\n          <p>You answered {score} out of {questions.length} questions correctly.</p>\n        </div>\n      ) : questions.length > 0 && currentQuestionIndex < questions.length ? (\n        <Question\n          questionData={questions[currentQuestionIndex]}\n          onAnswer={handleAnswer}\n          onNextQuestion={onNextQuestion}\n        />\n      ) : (\n        <p>Loading questions...</p>\n      )}\n    </div>\n  );\n};\n\nexport default Quiz;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}