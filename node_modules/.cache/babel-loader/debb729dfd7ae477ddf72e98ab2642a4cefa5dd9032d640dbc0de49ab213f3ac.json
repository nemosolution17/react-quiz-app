{"ast":null,"code":"var _jsxFileName = \"/home/naheem/super-quiz-app/src/components/QuizQuestions.tsx\",\n  _s = $RefreshSig$();\n// Question.tsx\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Question = ({\n  questionData,\n  onAnswer,\n  onNextQuestion // Add to props\n}) => {\n  _s();\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [timer, setTimer] = useState(questionData.time);\n  useEffect(() => {\n    setSelectedAnswer(null); // Reset selectedAnswer when a new question is received\n    setTimer(questionData.time); // Reset the timer when a new question is received\n  }, [questionData]);\n  useEffect(() => {\n    if (timer > 0) {\n      const interval = setInterval(() => {\n        setTimer(timer - 1);\n      }, 1000);\n      return () => clearInterval(interval);\n    } else {\n      handleAnswer();\n    }\n  }, [timer]);\n  const handleAnswer = () => {\n    if (selectedAnswer !== null) {\n      const isCorrect = selectedAnswer === questionData.answer;\n      onAnswer(isCorrect);\n    }\n    onNextQuestion(); // Always move to the next question when the timer ends\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Question\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n      src: questionData.imageUrl,\n      alt: \"Question\",\n      className: \"Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: questionData.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: questionData.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"answer\",\n            value: index,\n            checked: selectedAnswer === index,\n            onChange: () => setSelectedAnswer(index),\n            disabled: timer <= 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), option]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Time Remaining: \", timer, \" seconds\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Question, \"j+BccfUliCQ6TaEVsg2+zxsFmpI=\");\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Question","questionData","onAnswer","onNextQuestion","_s","selectedAnswer","setSelectedAnswer","timer","setTimer","time","interval","setInterval","clearInterval","handleAnswer","isCorrect","answer","className","children","src","imageUrl","alt","fileName","_jsxFileName","lineNumber","columnNumber","question","options","map","option","index","type","name","value","checked","onChange","disabled","_c","$RefreshReg$"],"sources":["/home/naheem/super-quiz-app/src/components/QuizQuestions.tsx"],"sourcesContent":["// Question.tsx\nimport React, { useState, useEffect } from 'react';\n\ninterface QuestionProps {\n  questionData: {\n    imageUrl: string;\n    question: string;\n    options: string[];\n    answer: number;\n    time: number;\n  };\n  onAnswer: (isCorrect: boolean) => void;\n  onNextQuestion: () => void; // New prop to handle advancing to the next question\n}\n\nconst Question: React.FC<QuestionProps> = ({\n  questionData,\n  onAnswer,\n  onNextQuestion, // Add to props\n}) => {\n  const [selectedAnswer, setSelectedAnswer] = useState<number | null>(null);\n  const [timer, setTimer] = useState<number>(questionData.time);\n\n  useEffect(() => {\n    setSelectedAnswer(null); // Reset selectedAnswer when a new question is received\n    setTimer(questionData.time); // Reset the timer when a new question is received\n  }, [questionData]);\n\n  useEffect(() => {\n    if (timer > 0) {\n      const interval = setInterval(() => {\n        setTimer(timer - 1);\n      }, 1000);\n\n      return () => clearInterval(interval);\n    } else {\n      handleAnswer();\n    }\n  }, [timer]);\n\n  const handleAnswer = () => {\n    if (selectedAnswer !== null) {\n      const isCorrect = selectedAnswer === questionData.answer;\n      onAnswer(isCorrect);\n    }\n    onNextQuestion(); // Always move to the next question when the timer ends\n  };\n\n  return (\n    <div className=\"Question\"> {/* Add className here */}\n      <img src={questionData.imageUrl} alt=\"Question\" className=\"Image\" /> {/* Image */}\n      <h2>{questionData.question}</h2> {/* Question */}\n      <ul>\n        {questionData.options.map((option, index) => (\n          <li key={index}>\n            <label>\n              <input\n                type=\"radio\"\n                name=\"answer\"\n                value={index}\n                checked={selectedAnswer === index}\n                onChange={() => setSelectedAnswer(index)}\n                disabled={timer <= 0}\n              />\n              {option}\n            </label>\n          </li>\n        ))}\n      </ul>\n      <p>Time Remaining: {timer} seconds</p>\n    </div>\n  );\n};\n\nexport default Question;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}