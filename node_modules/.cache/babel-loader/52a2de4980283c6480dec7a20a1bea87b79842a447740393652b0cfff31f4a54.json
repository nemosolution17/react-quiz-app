{"ast":null,"code":"var _jsxFileName = \"/home/naheem/super-quiz-app/src/components/QuizQuestions.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../Quiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Question = ({\n  questionData,\n  onAnswer,\n  onNextQuestion\n}) => {\n  _s();\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [timer, setTimer] = useState(questionData.time);\n\n  // Reset timer and selected option when question data changes\n  useEffect(() => {\n    setSelectedOption(null);\n    setTimer(questionData.time);\n  }, [questionData]);\n\n  // Function to handle a user's answer\n  const handleAnswer = isCorrect => {\n    onAnswer(isCorrect);\n    setTimeout(() => {\n      onNextQuestion();\n    }, 5000); // Delay for 5 seconds before moving to the next question\n  };\n\n  // Function to handle a button click\n  const handleButtonClick = index => {\n    if (selectedOption === null && timer > 0) {\n      setSelectedOption(index);\n      if (questionData.answer === index) {\n        // If the selected option is correct, set the timer to 0\n        setTimer(0);\n        handleAnswer(true);\n      } else {\n        handleAnswer(false);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Question\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ImageContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: questionData.imageUrl,\n        alt: \"Question\",\n        className: \"Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: questionData.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Options\",\n      children: questionData.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `Option ${selectedOption === index ? questionData.answer === index ? 'Correct' : 'Incorrect' : ''}`,\n        onClick: () => handleButtonClick(index),\n        disabled: selectedOption !== null || timer <= 0,\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Time Remaining: \", timer, \" seconds\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Question, \"/TCuxN+QVnHivbaJMb3aZgcqHMM=\");\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Question","questionData","onAnswer","onNextQuestion","_s","selectedOption","setSelectedOption","timer","setTimer","time","handleAnswer","isCorrect","setTimeout","handleButtonClick","index","answer","className","children","src","imageUrl","alt","fileName","_jsxFileName","lineNumber","columnNumber","question","options","map","option","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/naheem/super-quiz-app/src/components/QuizQuestions.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../Quiz.css';\n\ninterface QuestionProps {\n  questionData: {\n    imageUrl: string;\n    question: string;\n    options: string[];\n    answer: number;\n    time: number;\n  };\n  onAnswer: (isCorrect: boolean) => void;\n  onNextQuestion: () => void;\n}\n\nconst Question: React.FC<QuestionProps> = ({\n  questionData,\n  onAnswer,\n  onNextQuestion,\n}) => {\n  const [selectedOption, setSelectedOption] = useState<number | null>(null);\n  const [timer, setTimer] = useState<number>(questionData.time);\n\n  // Reset timer and selected option when question data changes\n  useEffect(() => {\n    setSelectedOption(null);\n    setTimer(questionData.time);\n  }, [questionData]);\n\n  // Function to handle a user's answer\n  const handleAnswer = (isCorrect: boolean) => {\n    onAnswer(isCorrect);\n    setTimeout(() => {\n      onNextQuestion();\n    }, 5000); // Delay for 5 seconds before moving to the next question\n  };\n\n  // Function to handle a button click\n  const handleButtonClick = (index: number) => {\n    if (selectedOption === null && timer > 0) {\n      setSelectedOption(index);\n      if (questionData.answer === index) {\n        // If the selected option is correct, set the timer to 0\n        setTimer(0);\n        handleAnswer(true);\n      } else {\n        handleAnswer(false);\n      }\n    }\n  };\n\n  return (\n    <div className=\"Question\">\n      <div className=\"ImageContainer\">\n        <img src={questionData.imageUrl} alt=\"Question\" className=\"Image\" />\n      </div>\n      <h2>{questionData.question}</h2>\n      <div className=\"Options\">\n        {questionData.options.map((option, index) => (\n          <button\n            key={index}\n            className={`Option ${\n              selectedOption === index\n                ? questionData.answer === index\n                  ? 'Correct'\n                  : 'Incorrect'\n                : ''\n            }`}\n            onClick={() => handleButtonClick(index)}\n            disabled={selectedOption !== null || timer <= 0}\n          >\n            {option}\n          </button>\n        ))}\n      </div>\n      <p>Time Remaining: {timer} seconds</p>\n    </div>\n  );\n};\n\nexport default Question;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}