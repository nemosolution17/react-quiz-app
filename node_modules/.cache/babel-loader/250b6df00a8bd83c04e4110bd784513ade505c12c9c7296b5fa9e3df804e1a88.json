{"ast":null,"code":"var _jsxFileName = \"/home/naheem/super-quiz-app/src/components/Quiz.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quiz() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [timer, setTimer] = useState(10); // Adjust timer duration as needed\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  useEffect(() => {\n    // Fetch questions from the API when the component mounts\n    axios.get('https://scs-interview-api.herokuapp.com/questions').then(response => {\n      setQuestions(response.data);\n    }).catch(error => {\n      console.error('Error fetching questions:', error);\n    });\n  }, []);\n  useEffect(() => {\n    // Start the timer when a new question is displayed\n    if (isTimerRunning) {\n      const timerInterval = setInterval(() => {\n        setTimer(prevTimer => prevTimer - 1);\n      }, 1000);\n\n      // Stop the timer when it reaches 0\n      if (timer === 0) {\n        clearInterval(timerInterval);\n        handleNextQuestion();\n      }\n      return () => {\n        clearInterval(timerInterval);\n      };\n    }\n  }, [isTimerRunning, timer]);\n  const handleNextQuestion = () => {\n    // Check if the user's answer is correct\n    const currentQuestion = questions[currentQuestionIndex];\n    if (currentQuestion.correctAnswer === userAnswers[currentQuestionIndex]) {\n      setCorrectAnswers(prevCorrectAnswers => prevCorrectAnswers + 1);\n    }\n\n    // Advance to the next question or show the summary\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(prevIndex => prevIndex + 1);\n      setIsTimerRunning(true);\n      setTimer(10); // Reset the timer for the next question\n    } else {\n      // Show the summary\n      setIsTimerRunning(false);\n      setCurrentQuestionIndex(0);\n      setUserAnswers([]);\n      alert(`Quiz completed! You answered ${correctAnswers} out of ${questions.length} questions correctly.`);\n    }\n  };\n  const handleAnswerSelect = selectedAnswer => {\n    // Save the user's selected answer\n    setUserAnswers(prevAnswers => {\n      const newAnswers = [...prevAnswers];\n      newAnswers[currentQuestionIndex] = selectedAnswer;\n      return newAnswers;\n    });\n    setIsTimerRunning(false); // Stop the timer when an answer is selected\n  };\n\n  const currentQuestion = questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), currentQuestion ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Question \", currentQuestionIndex + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: currentQuestion.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answers\",\n        children: currentQuestion.choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswerSelect(choice),\n          disabled: !isTimerRunning,\n          children: choice\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Time remaining: \", timer, \" seconds\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNextQuestion,\n      disabled: isTimerRunning,\n      children: currentQuestionIndex === questions.length - 1 ? 'Finish' : 'Next'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"KvX6+/IiQLAW5q1iMHzYma0jD5g=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Quiz","_s","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","userAnswers","setUserAnswers","timer","setTimer","isTimerRunning","setIsTimerRunning","correctAnswers","setCorrectAnswers","get","then","response","data","catch","error","console","timerInterval","setInterval","prevTimer","clearInterval","handleNextQuestion","currentQuestion","correctAnswer","prevCorrectAnswers","length","prevIndex","alert","handleAnswerSelect","selectedAnswer","prevAnswers","newAnswers","className","children","fileName","_jsxFileName","lineNumber","columnNumber","question","choices","map","choice","index","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/naheem/super-quiz-app/src/components/Quiz.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction Quiz() {\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [timer, setTimer] = useState(10); // Adjust timer duration as needed\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n\n  useEffect(() => {\n    // Fetch questions from the API when the component mounts\n    axios.get('https://scs-interview-api.herokuapp.com/questions')\n      .then((response) => {\n        setQuestions(response.data);\n      })\n      .catch((error) => {\n        console.error('Error fetching questions:', error);\n      });\n  }, []);\n\n  useEffect(() => {\n    // Start the timer when a new question is displayed\n    if (isTimerRunning) {\n      const timerInterval = setInterval(() => {\n        setTimer((prevTimer) => prevTimer - 1);\n      }, 1000);\n\n      // Stop the timer when it reaches 0\n      if (timer === 0) {\n        clearInterval(timerInterval);\n        handleNextQuestion();\n      }\n\n      return () => {\n        clearInterval(timerInterval);\n      };\n    }\n  }, [isTimerRunning, timer]);\n\n  const handleNextQuestion = () => {\n    // Check if the user's answer is correct\n    const currentQuestion = questions[currentQuestionIndex];\n    if (currentQuestion.correctAnswer === userAnswers[currentQuestionIndex]) {\n      setCorrectAnswers((prevCorrectAnswers) => prevCorrectAnswers + 1);\n    }\n\n    // Advance to the next question or show the summary\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex((prevIndex) => prevIndex + 1);\n      setIsTimerRunning(true);\n      setTimer(10); // Reset the timer for the next question\n    } else {\n      // Show the summary\n      setIsTimerRunning(false);\n      setCurrentQuestionIndex(0);\n      setUserAnswers([]);\n      alert(`Quiz completed! You answered ${correctAnswers} out of ${questions.length} questions correctly.`);\n    }\n  };\n\n  const handleAnswerSelect = (selectedAnswer) => {\n    // Save the user's selected answer\n    setUserAnswers((prevAnswers) => {\n      const newAnswers = [...prevAnswers];\n      newAnswers[currentQuestionIndex] = selectedAnswer;\n      return newAnswers;\n    });\n    setIsTimerRunning(false); // Stop the timer when an answer is selected\n  };\n\n  const currentQuestion = questions[currentQuestionIndex];\n\n  return (\n    <div className=\"quiz-container\">\n      <h1>Quiz App</h1>\n      {currentQuestion ? (\n        <div className=\"question-container\">\n          <h2>Question {currentQuestionIndex + 1}</h2>\n          <p>{currentQuestion.question}</p>\n          <div className=\"answers\">\n            {currentQuestion.choices.map((choice, index) => (\n              <button\n                key={index}\n                onClick={() => handleAnswerSelect(choice)}\n                disabled={!isTimerRunning}\n              >\n                {choice}\n              </button>\n            ))}\n          </div>\n          <p>Time remaining: {timer} seconds</p>\n        </div>\n      ) : (\n        <p>Loading questions...</p>\n      )}\n      <button onClick={handleNextQuestion} disabled={isTimerRunning}>\n        {currentQuestionIndex === questions.length - 1 ? 'Finish' : 'Next'}\n      </button>\n    </div>\n  );\n}\n\nexport default Quiz;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}